{
  "Parameters": {
    "TargetEnvironment": {
      "Type": "String",
      "Description": "The target environment for this stack",
      "Default": "eu1iec1"
    },
    "DeployAMI": {
      "Type": "String",
      "Default": "ami-eb4133fc"
    },
    "MonitorAMI": {
      "Type": "String",
      "Default": "ami-eb4133fc"
    },
    "MonitorServerExistingEIP": {
      "Type": "String",
      "Description": "Allocation ID of the elastic IP address for the Monitor server."
    },
    "StatsAMI": {
      "Type": "String",
      "Default": "ami-eb4133fc"
    },
    "TerminationProtection": {
      "Type": "String",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Default": "false"
    },
    "DataVolumeEncryption": {
      "Type": "String",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Default": "true"
    }
  },
  "Mappings": {
    "Constants": {
      "InstanceProfiles": {
        "StatsServer": "statsServer",
        "MonitorServer": "monitorServer",
        "DeployServer": "deployServer"
      }
    }
  },
  "Resources": {
    "Environment": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::Join": [
            "",
            [
              "arn:aws:lambda:",
              { "Ref": "AWS::Region" },
              ":",
              { "Ref": "AWS::AccountId" },
              ":function:StackInfo"
            ]
          ]
        },
        "StackName": { "Ref": "TargetEnvironment" }
      }
    },
    "MonitorSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": { "Fn::GetAtt": [ "Environment", "VPC" ] },
        "GroupDescription": "Monitor",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                " ",
                [
                  { "Fn::GetAtt": [ "Environment", "NamingPrefix" ] },
                  "Monitor"
                ]
              ]
            }
          }
        ]
      }
    },
    "StatsServerAENI": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "SubnetId": {
          "Fn::GetAtt": [
            "Environment",
            "DbSubnetA"
          ]
        },
        "GroupSet": [
          {
            "Fn::GetAtt": [
              "Environment",
              "CoreSG"
            ]
          },
          {
            "Fn::GetAtt": [
              "Environment",
              "RemoteAccessSG"
            ]
          }
        ],
        "Description": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::GetAtt": [
                  "Environment",
                  "NamingPrefix"
                ]
              },
              "stats1",
              {
                "Fn::GetAtt": [
                  "Environment",
                  "NamingSuffix"
                ]
              }
            ]
          ]
        }
      }
    },
    "StatsServerAVolume1": {
      "Type": "AWS::EC2::Volume",
      "DeletionPolicy": "Snapshot",
      "Properties": {
        "AvailabilityZone": {
          "Fn::GetAtt": [
            "Environment",
            "AZA"
          ]
        },
        "Size": "3600",
        "VolumeType": "gp2",
        "Encrypted": { "Ref": "DataVolumeEncryption" },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::GetAtt": [
                      "Environment",
                      "NamingPrefix"
                    ]
                  },
                  "stats1",
                  {
                    "Fn::GetAtt": [
                      "Environment",
                      "NamingSuffix"
                    ]
                  },
                  " - xvdf"
                ]
              ]
            }
          }
        ]
      }
    },
    "StatsServerA": {
      "Type": "AWS::EC2::Instance",
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": 1,
          "Timeout": "PT60M"
        }
      },
      "Properties": {
        "ImageId": { "Ref": "StatsAMI" },
        "InstanceType": "m4.2xlarge",
        "IamInstanceProfile": {
          "Fn::FindInMap": [
            "Constants",
            "InstanceProfiles",
            "StatsServer"
          ]
        },
        "DisableApiTermination": { "Ref": "TerminationProtection" },
        "Monitoring": true,
        "NetworkInterfaces": [
          {
            "DeviceIndex": "0",
            "DeleteOnTermination": false,
            "NetworkInterfaceId": { "Ref": "StatsServerAENI" }
          }
        ],
        "EbsOptimized": true,
        "Volumes": [
          {
            "Device": "xvdf",
            "VolumeId": { "Ref": "StatsServerAVolume1" }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::GetAtt": [
                      "Environment",
                      "NamingPrefix"
                    ]
                  },
                  "stats1",
                  {
                    "Fn::GetAtt": [
                      "Environment",
                      "NamingSuffix"
                    ]
                  }
                ]
              ]
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n\n",
                "filename=\"setup_stats.sh\"\n",
                "setup_file=\"$(mktemp)\"\n",
                "curl -sf -o \"${setup_file}\" \"${scripts}/${filename}\" || exit 1\n",
                "bash \"${setup_file}\"",
                " -i 1 -o 1",
                " -b ",
                {
                  "Fn::Join": [
                    "-",
                    [
                      {
                        "Fn::GetAtt": [
                          "Environment",
                          "NamingPrefix"
                        ]
                      },
                      "backup",
                      { "Ref": "AWS::AccountId" }
                    ]
                  ]
                },
                " -h ",
                {
                  "Fn::GetAtt": [
                    "Environment",
                    "NamingPrefix"
                  ]
                },
                " -e ",
                {
                  "Fn::GetAtt": [
                    "Environment",
                    "NamingSuffix"
                  ]
                },
                "\n",
                "cfn-signal --region=",
                { "Ref": "AWS::Region" },
                " --stack=",
                { "Ref": "AWS::StackName" },
                " --resource=StatsServerA --exit-code=$?\n"
              ]
            ]
          }
        }
      }
    },
    "StatsServerBENI": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "SubnetId": {
          "Fn::GetAtt": [
            "Environment",
            "DbSubnetB"
          ]
        },
        "GroupSet": [
          {
            "Fn::GetAtt": [
              "Environment",
              "CoreSG"
            ]
          },
          {
            "Fn::GetAtt": [
              "Environment",
              "RemoteAccessSG"
            ]
          }
        ],
        "Description": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::GetAtt": [
                  "Environment",
                  "NamingPrefix"
                ]
              },
              "stats2",
              {
                "Fn::GetAtt": [
                  "Environment",
                  "NamingSuffix"
                ]
              }
            ]
          ]
        }
      }
    },
    "StatsServerBVolume1": {
      "Type": "AWS::EC2::Volume",
      "DeletionPolicy": "Snapshot",
      "Properties": {
        "AvailabilityZone": {
          "Fn::GetAtt": [
            "Environment",
            "AZB"
          ]
        },
        "Size": "3600",
        "VolumeType": "gp2",
        "Encrypted": { "Ref": "DataVolumeEncryption" },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::GetAtt": [
                      "Environment",
                      "NamingPrefix"
                    ]
                  },
                  "stats2",
                  {
                    "Fn::GetAtt": [
                      "Environment",
                      "NamingSuffix"
                    ]
                  },
                  " - xvdf"
                ]
              ]
            }
          }
        ]
      }
    },
    "StatsServerB": {
      "Type": "AWS::EC2::Instance",
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": 1,
          "Timeout": "PT60M"
        }
      },
      "Properties": {
        "ImageId": { "Ref": "StatsAMI" },
        "InstanceType": "m4.2xlarge",
        "IamInstanceProfile": {
          "Fn::FindInMap": [
            "Constants",
            "InstanceProfiles",
            "StatsServer"
          ]
        },
        "DisableApiTermination": { "Ref": "TerminationProtection" },
        "Monitoring": true,
        "NetworkInterfaces": [
          {
            "DeviceIndex": "0",
            "DeleteOnTermination": false,
            "NetworkInterfaceId": { "Ref": "StatsServerBENI" }
          }
        ],
        "EbsOptimized": true,
        "Volumes": [
          {
            "Device": "xvdf",
            "VolumeId": { "Ref": "StatsServerBVolume1" }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::GetAtt": [
                      "Environment",
                      "NamingPrefix"
                    ]
                  },
                  "stats2",
                  {
                    "Fn::GetAtt": [
                      "Environment",
                      "NamingSuffix"
                    ]
                  }
                ]
              ]
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n\n",
                "filename=\"setup_stats.sh\"\n",
                "setup_file=\"$(mktemp)\"\n",
                "curl -sf -o \"${setup_file}\" \"${scripts}/${filename}\" || exit 1\n",
                "bash \"${setup_file}\"",
                " -i 1 -o 1",
                " -b ",
                {
                  "Fn::Join": [
                    "-",
                    [
                      {
                        "Fn::GetAtt": [
                          "Environment",
                          "NamingPrefix"
                        ]
                      },
                      "backup",
                      { "Ref": "AWS::AccountId" }
                    ]
                  ]
                },
                " -h ",
                {
                  "Fn::GetAtt": [
                    "Environment",
                    "NamingPrefix"
                  ]
                },
                " -e ",
                {
                  "Fn::GetAtt": [
                    "Environment",
                    "NamingSuffix"
                  ]
                },
                "\n",
                "cfn-signal --region=",
                { "Ref": "AWS::Region" },
                " --stack=",
                { "Ref": "AWS::StackName" },
                " --resource=StatsServerB --exit-code=$?\n"
              ]
            ]
          }
        }
      }
    },
    "MonitorServerENI": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "SubnetId": {
          "Fn::GetAtt": [
            "Environment",
            "PublicSubnetA"
          ]
        },
        "GroupSet": [
          {
            "Fn::GetAtt": [
              "Environment",
              "CoreSG"
            ]
          },
          { "Ref": "MonitorSG" },
          {
            "Fn::GetAtt": [
              "Environment",
              "RemoteAccessSG"
            ]
          }
        ],
        "Description": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::GetAtt": [
                  "Environment",
                  "NamingPrefix"
                ]
              },
              "monitor1",
              {
                "Fn::GetAtt": [
                  "Environment",
                  "NamingSuffix"
                ]
              }
            ]
          ]
        }
      }
    },
    "MonitorServerEIPAssociation": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": { "Ref": "MonitorServerExistingEIP" },
        "NetworkInterfaceId": { "Ref": "MonitorServerENI" }
      }
    },
    "MonitorServer": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": "MonitorServerEIPAssociation",
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": 1,
          "Timeout": "PT60M"
        }
      },
      "Properties": {
        "ImageId": { "Ref": "MonitorAMI" },
        "InstanceType": "c3.4xlarge",
        "IamInstanceProfile": {
          "Fn::FindInMap": [
            "Constants",
            "InstanceProfiles",
            "MonitorServer"
          ]
        },
        "DisableApiTermination": { "Ref": "TerminationProtection" },
        "Monitoring": true,
        "NetworkInterfaces": [
          {
            "DeviceIndex": "0",
            "DeleteOnTermination": false,
            "NetworkInterfaceId": { "Ref": "MonitorServerENI" }
          }
        ],
        "EbsOptimized": true,
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": "100",
              "VolumeType": "gp2"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::GetAtt": [
                      "Environment",
                      "NamingPrefix"
                    ]
                  },
                  "monitor1",
                  {
                    "Fn::GetAtt": [
                      "Environment",
                      "NamingSuffix"
                    ]
                  }
                ]
              ]
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n\n",
                "filename=\"setup_monitor.sh\"\n",
                "setup_file=\"$(mktemp)\"\n",
                "curl -sf -o \"${setup_file}\" \"${scripts}/${filename}\" || exit 1\n",
                "bash \"${setup_file}\"",
                " -b ",
                {
                  "Fn::Join": [
                    "-",
                    [
                      {
                        "Fn::GetAtt": [
                          "Environment",
                          "NamingPrefix"
                        ]
                      },
                      "files",
                      { "Ref": "AWS::AccountId" }
                    ]
                  ]
                },
                " -h ",
                {
                  "Fn::GetAtt": [
                    "Environment",
                    "NamingPrefix"
                  ]
                },
                " -e ",
                {
                  "Fn::GetAtt": [
                    "Environment",
                    "NamingSuffix"
                  ]
                },
                "\n",
                "cfn-signal --region=",
                { "Ref": "AWS::Region" },
                " --stack=",
                { "Ref": "AWS::StackName" },
                " --resource=MonitorServer --exit-code=$?\n"
              ]
            ]
          }
        }
      }
    },
    "DeployServerENI": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "SubnetId": {
          "Fn::GetAtt": [
            "Environment",
            "AppSubnetA"
          ]
        },
        "GroupSet": [
          {
            "Fn::GetAtt": [
              "Environment",
              "CoreSG"
            ]
          },
          {
            "Fn::GetAtt": [
              "Environment",
              "RemoteAccessSG"
            ]
          }
        ],
        "Description": {
          "Fn::Join": [
            "",
            [
              {
                "Fn::GetAtt": [
                  "Environment",
                  "NamingPrefix"
                ]
              },
              "deploy1",
              {
                "Fn::GetAtt": [
                  "Environment",
                  "NamingSuffix"
                ]
              }
            ]
          ]
        }
      }
    },
    "DeployServer": {
      "Type": "AWS::EC2::Instance",
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": 1,
          "Timeout": "PT60M"
        }
      },
      "Properties": {
        "ImageId": { "Ref": "DeployAMI" },
        "InstanceType": "t2.medium",
        "IamInstanceProfile": {
          "Fn::FindInMap": [
            "Constants",
            "InstanceProfiles",
            "DeployServer"
          ]
        },
        "DisableApiTermination": { "Ref": "TerminationProtection" },
        "Monitoring": true,
        "NetworkInterfaces": [
          {
            "DeviceIndex": "0",
            "DeleteOnTermination": false,
            "NetworkInterfaceId": { "Ref": "DeployServerENI" }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::GetAtt": [
                      "Environment",
                      "NamingPrefix"
                    ]
                  },
                  "deploy1",
                  {
                    "Fn::GetAtt": [
                      "Environment",
                      "NamingSuffix"
                    ]
                  }
                ]
              ]
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n\n",
                "filename=\"setup_deploy.sh\"\n",
                "setup_file=\"$(mktemp)\"\n",
                "curl -sf -o \"${setup_file}\" \"${scripts}/${filename}\" || exit 1\n",
                "bash \"${setup_file}\"",
                " -b ",
                {
                  "Fn::Join": [
                    "-",
                    [
                      {
                        "Fn::GetAtt": [
                          "Environment",
                          "NamingPrefix"
                        ]
                      },
                      "files",
                      { "Ref": "AWS::AccountId" }
                    ]
                  ]
                },
                " -h ",
                {
                  "Fn::GetAtt": [
                    "Environment",
                    "NamingPrefix"
                  ]
                },
                " -e ",
                {
                  "Fn::GetAtt": [
                    "Environment",
                    "NamingSuffix"
                  ]
                },
                "\n",
                "cfn-signal --region=",
                { "Ref": "AWS::Region" },
                " --stack=",
                { "Ref": "AWS::StackName" },
                " --resource=DeployServer --exit-code=$?\n"
              ]
            ]
          }
        }
      }
    }
  },
  "Outputs": {
    "StatsServersPrimaryIPAddresses": {
      "Value": {
        "Fn::Join": [
          ",",
          [
            {
              "Fn::GetAtt": [
                "StatsServerAENI",
                "PrimaryPrivateIpAddress"
              ]
            },
            {
              "Fn::GetAtt": [
                "StatsServerBENI",
                "PrimaryPrivateIpAddress"
              ]
            }
          ]
        ]
      }
    },
    "MonitorServerPrimaryIPAddress": {
      "Value": {
        "Fn::GetAtt": [
          "MonitorServerENI",
          "PrimaryPrivateIpAddress"
        ]
      }
    }
  }
}

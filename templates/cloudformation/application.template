{
	"AWSTemplateFormatVersion" : "2010-09-09",

	"Description" : "Version 1.0\nCreates the application services stack",

	"Parameters" : {
		"TargetEnvironment" : {
			"Type" : "String",
			"Description" : "The target environment for this stack",
			"AllowedValues" : ["eu1iec1"]
		},
		"TerminationProtection" : {
			"Type" : "String", "AllowedValues" : ["true","false"], "Default" : "false"
		},
		"Certificate" : {
			"Type" : "String",
			"Description" : "The SSL certificate name",
			"AllowedValues" : ["InsideSales"],
			"Default" : "InsideSales"
		}
	},
	"Mappings" : {
		"Constants" : {
			"InstanceProfiles" : {
				"JpServer" : "jpServer",
				"WebServer" : "webServer",
				"WorkerServer" : "workerServer",
				"SocketServer" : "socketServer"
			}
		},

		"AMIs" : {
			"eu-west-1" : { "Jp" : "ami-a6207bd1", "Web" : "ami-a6207bd1", "Worker" : "ami-a6207bd1", "Socket" : "ami-a6207bd1" }
		}
	},

	"Resources" : {

		"Environment" : {
			"Type" : "AWS::CloudFormation::CustomResource",
			"Properties": {
				"ServiceToken": { "Fn::Join": [ "", [ "arn:aws:lambda:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":function:StackInfo" ] ] },
				"StackName": { "Ref": "TargetEnvironment" }
			}
		},

		"ApplicationSG" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"VpcId" :  {"Fn::GetAtt" : [ "Environment", "VPC" ] },
				"GroupDescription" : "Application SG",
				"SecurityGroupIngress" : [
					{ "IpProtocol" : "-1", "CidrIp" : {"Fn::GetAtt" : [ "Environment", "VPCCIDR"] } }
				],
				"SecurityGroupEgress" : [
					{ "IpProtocol" : "-1", "CidrIp" : "0.0.0.0/0" }
				]
			}
		},

		"WebIncomingSG" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"VpcId" :  {"Fn::GetAtt" : [ "Environment", "VPC" ] },
				"GroupDescription" : "Internet traffic permitted to the Web servers",
				"SecurityGroupIngress" : [
					{ "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" },
					{ "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0" }
				],
				"SecurityGroupEgress" : []
			}
		},

		"SocketIncomingSG" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"VpcId" :  {"Fn::GetAtt" : [ "Environment", "VPC" ] },
				"GroupDescription" : "Internet traffic permitted to the Socket servers",
				"SecurityGroupIngress" : [
					{ "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" },
					{ "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0" }
				],
				"SecurityGroupEgress" : []
			}
		},

		"JpServerA" : {
		    "Type" : "AWS::EC2::Instance", "CreationPolicy" : { "ResourceSignal" : { "Count" : 1, "Timeout" : "PT60M"} },
		    "Properties" : {
		        "ImageId" :  {"Fn::FindInMap" : [ "AMIs" ,  { "Ref" : "AWS::Region" }, "Jp"] },
		        "InstanceType" :  "c4.4xlarge",
				"KeyName" : {"Fn::GetAtt" : [ "Environment", "Key"] },
				"IamInstanceProfile" : {"Fn::FindInMap" : [ "Constants" , "InstanceProfiles", "JpServer"] },
				"DisableApiTermination" : { "Ref" : "TerminationProtection" },
				"Monitoring" :  true,
				"NetworkInterfaces" : [
					{ "DeviceIndex" : "0", "NetworkInterfaceId" : { "Ref" : "JpServerAENI" } }
				],
				"Tags" : [ { "Key" : "Name", "Value" : {"Fn::Join" : [ "", [
						 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						 "jp1",
						 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
					] ]}
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
					"scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n\n",
					"filename=\"setup_jp.sh\"\n",
					"setup_file=\"$(mktemp)\"\n",
					"curl -sf -o \"${setup_file}\" \"${scripts}/${filename}\" || exit 1\n",
					"bash \"${setup_file}\"",
						" -b ", {"Fn::Join" : [ "-", [
							{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
							"files",
							{ "Ref" : "AWS::AccountId" }
						] ]},
						" -h ", {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						" -e ", {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }, "\n",
					"cfn-signal --region=", { "Ref" : "AWS::Region" }, " --stack=", { "Ref" : "AWS::StackName" }, " --resource=JpServerA --exit-code=$?\n"
				] ] } }
		    }
		},

		"JpServerAENI" : {
		    "Type" : "AWS::EC2::NetworkInterface",
		    "Properties" : {
				"SubnetId" : {"Fn::GetAtt" : [ "Environment", "AppSubnetA"] },
				"GroupSet" : [
					{ "Ref" : "ApplicationSG" },
					{"Fn::GetAtt" : [ "Environment", "RemoteAccessSG"] }
				],
				"Description" : {"Fn::Join" : [ "", [
					{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
					"jp1",
					{"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
				] ]}
		    }
		},

		"JpServerB" : {
		    "Type" : "AWS::EC2::Instance", "CreationPolicy" : { "ResourceSignal" : { "Count" : 1, "Timeout" : "PT60M"} },
		    "Properties" : {
		        "ImageId" :  {"Fn::FindInMap" : [ "AMIs" ,  { "Ref" : "AWS::Region" }, "Jp"] },
		        "InstanceType" :  "c4.4xlarge",
				"KeyName" : {"Fn::GetAtt" : [ "Environment", "Key"] },
				"IamInstanceProfile" : {"Fn::FindInMap" : [ "Constants" , "InstanceProfiles", "JpServer"] },
				"DisableApiTermination" :  { "Ref" : "TerminationProtection" },
				"Monitoring" :  true,
				"NetworkInterfaces" : [
					{ "DeviceIndex" : "0", "DeleteOnTermination" : false, "NetworkInterfaceId" : { "Ref" : "JpServerBENI" } }
				],
				"Tags" : [ { "Key" : "Name", "Value" : {"Fn::Join" : [ "", [
						 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						 "jp2",
						 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
					] ]}
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
					"scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n\n",
					"filename=\"setup_jp.sh\"\n",
					"setup_file=\"$(mktemp)\"\n",
					"curl -sf -o \"${setup_file}\" \"${scripts}/${filename}\" || exit 1\n",
					"bash \"${setup_file}\"",
						" -b ", {"Fn::Join" : [ "-", [
							{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
							"files",
							{ "Ref" : "AWS::AccountId" }
						] ]},
						" -h ", {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						" -e ", {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }, "\n",
					"cfn-signal --region=", { "Ref" : "AWS::Region" }, " --stack=", { "Ref" : "AWS::StackName" }, " --resource=JpServerB --exit-code=$?\n"
				] ] } }
		    }
		},

		"JpServerBENI" : {
		    "Type" : "AWS::EC2::NetworkInterface",
		    "Properties" : {
				"SubnetId" : {"Fn::GetAtt" : [ "Environment", "AppSubnetB"] },
				"GroupSet" : [
					{ "Ref" : "ApplicationSG" },
					{"Fn::GetAtt" : [ "Environment", "RemoteAccessSG"] }
				],
				"Description" : {"Fn::Join" : [ "", [
					{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
					"jp2",
					{"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
				] ]}
		    }
		},

		"WebServerA" : {
		    "Type" : "AWS::EC2::Instance", "CreationPolicy" : { "ResourceSignal" : { "Count" : 1, "Timeout" : "PT60M"} },
		    "Properties" : {
		        "ImageId" :  {"Fn::FindInMap" : [ "AMIs" ,  { "Ref" : "AWS::Region" }, "Web"] },
		        "InstanceType" :  "c4.4xlarge",
				"KeyName" : {"Fn::GetAtt" : [ "Environment", "Key"] },
				"IamInstanceProfile" : {"Fn::FindInMap" : [ "Constants" , "InstanceProfiles", "WebServer"] },
				"DisableApiTermination" :  { "Ref" : "TerminationProtection" },
				"Monitoring" :  true,
				"SubnetId" : {"Fn::GetAtt" : [ "Environment", "WebSubnetA"] },
				"SecurityGroupIds" : [
					{ "Ref" : "ApplicationSG" },
					{"Fn::GetAtt" : [ "Environment", "RemoteAccessSG"] }
				],
				"BlockDeviceMappings" : [ { "DeviceName" : "/dev/xvda", "Ebs" : { "VolumeSize" : "100", "VolumeType" : "gp2"} }],
				"Tags" : [ { "Key" : "Name", "Value" : {"Fn::Join" : [ "", [
						 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						 "web1",
						 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
					] ]}
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
					"scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n\n",
					"filename=\"setup_web.sh\"\n",
					"setup_file=\"$(mktemp)\"\n",
					"curl -sf -o \"${setup_file}\" \"${scripts}/${filename}\" || exit 1\n",
					"bash \"${setup_file}\"",
						" -b ", {"Fn::Join" : [ "-", [
							{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
							"files",
							{ "Ref" : "AWS::AccountId" }
						] ]},
						" -h ", {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						" -e ", {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }, "\n",
					"cfn-signal --region=", { "Ref" : "AWS::Region" }, " --stack=", { "Ref" : "AWS::StackName" }, " --resource=WebServerA --exit-code=$?\n"
				] ] } }
		    }
		},

		"WebServerB" : {
		    "Type" : "AWS::EC2::Instance", "CreationPolicy" : { "ResourceSignal" : { "Count" : 1, "Timeout" : "PT60M"} },
		    "Properties" : {
		        "ImageId" :  {"Fn::FindInMap" : [ "AMIs" ,  { "Ref" : "AWS::Region" }, "Web"] },
		        "InstanceType" :  "c4.4xlarge",
				"KeyName" : {"Fn::GetAtt" : [ "Environment", "Key"] },
				"IamInstanceProfile" : {"Fn::FindInMap" : [ "Constants" , "InstanceProfiles", "WebServer"] },
				"DisableApiTermination" :  { "Ref" : "TerminationProtection" },
				"Monitoring" :  true,
				"SubnetId" : {"Fn::GetAtt" : [ "Environment", "WebSubnetB"] },
				"SecurityGroupIds" : [
					{ "Ref" : "ApplicationSG" },
					{"Fn::GetAtt" : [ "Environment", "RemoteAccessSG"] }
				],
				"BlockDeviceMappings" : [ { "DeviceName" : "/dev/xvda", "Ebs" : { "VolumeSize" : "100", "VolumeType" : "gp2"} }],
				"Tags" : [ { "Key" : "Name", "Value" : {"Fn::Join" : [ "", [
						 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						 "web2",
						 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
					] ]}
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
					"scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n\n",
					"filename=\"setup_web.sh\"\n",
					"setup_file=\"$(mktemp)\"\n",
					"curl -sf -o \"${setup_file}\" \"${scripts}/${filename}\" || exit 1\n",
					"bash \"${setup_file}\"",
						" -b ", {"Fn::Join" : [ "-", [
							{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
							"files",
							{ "Ref" : "AWS::AccountId" }
						] ]},
						" -h ", {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						" -e ", {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }, "\n",
					"cfn-signal --region=", { "Ref" : "AWS::Region" }, " --stack=", { "Ref" : "AWS::StackName" }, " --resource=WebServerB --exit-code=$?\n"
				] ] } }
		    }
		},

		"WebServerC" : {
		    "Type" : "AWS::EC2::Instance", "CreationPolicy" : { "ResourceSignal" : { "Count" : 1, "Timeout" : "PT60M"} },
		    "Properties" : {
		        "ImageId" :  {"Fn::FindInMap" : [ "AMIs" ,  { "Ref" : "AWS::Region" }, "Web"] },
		        "InstanceType" :  "c4.4xlarge",
				"KeyName" : {"Fn::GetAtt" : [ "Environment", "Key"] },
				"IamInstanceProfile" : {"Fn::FindInMap" : [ "Constants" , "InstanceProfiles", "WebServer"] },
				"DisableApiTermination" :  { "Ref" : "TerminationProtection" },
				"Monitoring" :  true,
				"SubnetId" : {"Fn::GetAtt" : [ "Environment", "WebSubnetC"] },
				"SecurityGroupIds" : [
					{ "Ref" : "ApplicationSG" },
					{"Fn::GetAtt" : [ "Environment", "RemoteAccessSG"] }
				],
				"BlockDeviceMappings" : [ { "DeviceName" : "/dev/xvda", "Ebs" : { "VolumeSize" : "100", "VolumeType" : "gp2"} }],
				"Tags" : [ { "Key" : "Name", "Value" : {"Fn::Join" : [ "", [
						 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						 "web3",
						 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
					] ]}
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
					"scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n\n",
					"filename=\"setup_web.sh\"\n",
					"setup_file=\"$(mktemp)\"\n",
					"curl -sf -o \"${setup_file}\" \"${scripts}/${filename}\" || exit 1\n",
					"bash \"${setup_file}\"",
						" -b ", {"Fn::Join" : [ "-", [
							{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
							"files",
							{ "Ref" : "AWS::AccountId" }
						] ]},
						" -h ", {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						" -e ", {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }, "\n",
					"cfn-signal --region=", { "Ref" : "AWS::Region" }, " --stack=", { "Ref" : "AWS::StackName" }, " --resource=WebServerC --exit-code=$?\n"
				] ] } }
		    }
		},

		"WebServerD" : {
		    "Type" : "AWS::EC2::Instance", "CreationPolicy" : { "ResourceSignal" : { "Count" : 1, "Timeout" : "PT60M"} },
		    "Properties" : {
		        "ImageId" :  {"Fn::FindInMap" : [ "AMIs" ,  { "Ref" : "AWS::Region" }, "Web"] },
		        "InstanceType" :  "c4.4xlarge",
				"KeyName" : {"Fn::GetAtt" : [ "Environment", "Key"] },
				"IamInstanceProfile" : {"Fn::FindInMap" : [ "Constants" , "InstanceProfiles", "WebServer"] },
				"DisableApiTermination" :  { "Ref" : "TerminationProtection" },
				"Monitoring" :  true,
				"SubnetId" : {"Fn::GetAtt" : [ "Environment", "WebSubnetA"] },
				"SecurityGroupIds" : [
					{ "Ref" : "ApplicationSG" },
					{"Fn::GetAtt" : [ "Environment", "RemoteAccessSG"] }
				],
				"BlockDeviceMappings" : [ { "DeviceName" : "/dev/xvda", "Ebs" : { "VolumeSize" : "100", "VolumeType" : "gp2"} }],
				"Tags" : [ { "Key" : "Name", "Value" : {"Fn::Join" : [ "", [
						 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						 "web4",
						 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
					] ]}
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
					"scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n\n",
					"filename=\"setup_web.sh\"\n",
					"setup_file=\"$(mktemp)\"\n",
					"curl -sf -o \"${setup_file}\" \"${scripts}/${filename}\" || exit 1\n",
					"bash \"${setup_file}\"",
						" -b ", {"Fn::Join" : [ "-", [
							{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
							"files",
							{ "Ref" : "AWS::AccountId" }
						] ]},
						" -h ", {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						" -e ", {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }, "\n",
					"cfn-signal --region=", { "Ref" : "AWS::Region" }, " --stack=", { "Ref" : "AWS::StackName" }, " --resource=WebServerD --exit-code=$?\n"
				] ] } }
		    }
		},

		"WebELB" : {
		    "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
		    "Properties" : {
				"LoadBalancerName" : "Web",
				"Subnets" : [
					{"Fn::GetAtt" : [ "Environment", "PublicSubnetA"] },
					{"Fn::GetAtt" : [ "Environment", "PublicSubnetB"] },
					{"Fn::GetAtt" : [ "Environment", "PublicSubnetC"] }
				],
				"ConnectionDrainingPolicy" : { "Enabled" :  true, "Timeout" : 300 },
				"CrossZone" :  true,
				"SecurityGroups" : [ { "Ref" : "WebIncomingSG" } ],
				"HealthCheck" : {
					"Target" : "HTTP:80/",
					"Interval" : "60",
					"HealthyThreshold" : "3",
					"UnhealthyThreshold" : "3",
					"Timeout" : "30"
				},
		        "Listeners" : [
					{
						"Protocol" : "HTTP", "LoadBalancerPort" : "80",
						"InstanceProtocol" : "HTTP", "InstancePort" : "80"
					},
					{
						"Protocol" : "HTTPS", "LoadBalancerPort" : "443",
						"SSLCertificateId" :  { "Fn::Join" : [ "", [
							"arn:aws:iam::", { "Ref" : "AWS::AccountId" }, ":server-certificate/",
							{ "Ref" : "Certificate" }
						] ]},
						"InstanceProtocol" : "HTTP", "InstancePort" : "8443"
					}
		        ],
				"Instances" : [ { "Ref" : "WebServerA" }, { "Ref" : "WebServerB" }, { "Ref" : "WebServerC" }, { "Ref" : "WebServerD" } ]
		    }
		},

		"WorkerServerA" : {
		    "Type" : "AWS::EC2::Instance", "CreationPolicy" : { "ResourceSignal" : { "Count" : 1, "Timeout" : "PT60M"} },
		    "Properties" : {
		        "ImageId" :  {"Fn::FindInMap" : [ "AMIs" ,  { "Ref" : "AWS::Region" }, "Worker"] },
		        "InstanceType" :  "c4.4xlarge",
				"KeyName" : {"Fn::GetAtt" : [ "Environment", "Key"] },
				"IamInstanceProfile" :  {"Fn::FindInMap" : [ "Constants" , "InstanceProfiles", "WorkerServer"] },
				"DisableApiTermination" :  { "Ref" : "TerminationProtection" },
				"Monitoring" :  true,
				"NetworkInterfaces" : [
					{ "DeviceIndex" : "0", "DeleteOnTermination" : false, "NetworkInterfaceId" : { "Ref" : "WorkerServerAENI" } }
				],
				"BlockDeviceMappings" : [ { "DeviceName" : "/dev/xvda", "Ebs" : { "VolumeSize" : "100", "VolumeType" : "gp2"} }],
				"Tags" : [ { "Key" : "Name", "Value" : {"Fn::Join" : [ "", [
						 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						 "worker1",
						 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
					] ]}
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
					"scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n\n",
					"filename=\"setup_worker.sh\"\n",
					"setup_file=\"$(mktemp)\"\n",
					"curl -sf -o \"${setup_file}\" \"${scripts}/${filename}\" || exit 1\n",
					"bash \"${setup_file}\"",
						" -i 1 -o 1",
						" -b ", {"Fn::Join" : [ "-", [
							{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
							"files",
							{ "Ref" : "AWS::AccountId" }
						] ]},
						" -h ", {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						" -e ", {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }, "\n",
					"cfn-signal --region=", { "Ref" : "AWS::Region" }, " --stack=", { "Ref" : "AWS::StackName" }, " --resource=WorkerServerA --exit-code=$?\n"
				] ] } }
		    }
		},

		"WorkerServerAENI" : {
		    "Type" : "AWS::EC2::NetworkInterface",
		    "Properties" : {
				"SubnetId" : {"Fn::GetAtt" : [ "Environment", "AppSubnetA"] },
				"GroupSet" : [
					{ "Ref" : "ApplicationSG" },
					{"Fn::GetAtt" : [ "Environment", "RemoteAccessSG"] }
				],
				"Description" : {"Fn::Join" : [ "", [
					{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
					"worker1",
					{"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
				] ]}
		    }
		},

		"WorkerServerB" : {
		    "Type" : "AWS::EC2::Instance", "CreationPolicy" : { "ResourceSignal" : { "Count" : 1, "Timeout" : "PT60M"} },
		    "Properties" : {
		        "ImageId" :  {"Fn::FindInMap" : [ "AMIs" ,  { "Ref" : "AWS::Region" }, "Worker"] },
		        "InstanceType" :  "c4.4xlarge",
				"KeyName" : {"Fn::GetAtt" : [ "Environment", "Key"] },
				"IamInstanceProfile" : {"Fn::FindInMap" : [ "Constants" , "InstanceProfiles", "WorkerServer"] },
				"DisableApiTermination" :  { "Ref" : "TerminationProtection" },
				"Monitoring" :  true,
				"NetworkInterfaces" : [
					{ "DeviceIndex" : "0", "DeleteOnTermination" : false, "NetworkInterfaceId" : { "Ref" : "WorkerServerBENI" } }
				],
				"BlockDeviceMappings" : [ { "DeviceName" : "/dev/xvda", "Ebs" : { "VolumeSize" : "100", "VolumeType" : "gp2"} }],
				"Tags" : [ { "Key" : "Name", "Value" : {"Fn::Join" : [ "", [
						 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						 "worker2",
						 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
					] ]}
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
					"scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n\n",
					"filename=\"setup_worker.sh\"\n",
					"setup_file=\"$(mktemp)\"\n",
					"curl -sf -o \"${setup_file}\" \"${scripts}/${filename}\" || exit 1\n",
					"bash \"${setup_file}\"",
						" -i 1 -o 1",
						" -b ", {"Fn::Join" : [ "-", [
							{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
							"files",
							{ "Ref" : "AWS::AccountId" }
						] ]},
						" -h ", {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						" -e ", {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }, "\n",
					"cfn-signal --region=", { "Ref" : "AWS::Region" }, " --stack=", { "Ref" : "AWS::StackName" }, " --resource=WorkerServerB --exit-code=$?\n"
				] ] } }
		    }
		},

		"WorkerServerBENI" : {
		    "Type" : "AWS::EC2::NetworkInterface",
		    "Properties" : {
				"SubnetId" : {"Fn::GetAtt" : [ "Environment", "AppSubnetB"] },
				"GroupSet" : [
					{ "Ref" : "ApplicationSG" },
					{"Fn::GetAtt" : [ "Environment", "RemoteAccessSG"] }
				],
				"Description" : {"Fn::Join" : [ "", [
					{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
					"worker2",
					{"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
				] ]}
		    }
		},

		"SocketServerA" : {
		    "Type" : "AWS::EC2::Instance", "CreationPolicy" : { "ResourceSignal" : { "Count" : 1, "Timeout" : "PT60M"} },
		    "Properties" : {
		        "ImageId" :  {"Fn::FindInMap" : [ "AMIs" ,  { "Ref" : "AWS::Region" }, "Socket"] },
		        "InstanceType" :  "r3.xlarge",
				"KeyName" : {"Fn::GetAtt" : [ "Environment", "Key"] },
				"IamInstanceProfile" : {"Fn::FindInMap" : [ "Constants" , "InstanceProfiles", "SocketServer"] },
				"DisableApiTermination" :  { "Ref" : "TerminationProtection" },
				"Monitoring" :  true,
				"SubnetId" : {"Fn::GetAtt" : [ "Environment", "WebSubnetA"] },
				"SecurityGroupIds" : [
					{ "Ref" : "ApplicationSG" },
					{"Fn::GetAtt" : [ "Environment", "RemoteAccessSG"] }
				],
				"EbsOptimized" : false,
				"Tags" : [ { "Key" : "Name", "Value" : {"Fn::Join" : [ "", [
						 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						 "socket1",
						 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
					] ]}
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
					"scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n\n",
					"filename=\"setup_socket.sh\"\n",
					"setup_file=\"$(mktemp)\"\n",
					"curl -sf -o \"${setup_file}\" \"${scripts}/${filename}\" || exit 1\n",
					"bash \"${setup_file}\"",
						" -b ", {"Fn::Join" : [ "-", [
							{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
							"files",
							{ "Ref" : "AWS::AccountId" }
						] ]},
						" -h ", {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						" -e ", {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }, "\n",
					"cfn-signal --region=", { "Ref" : "AWS::Region" }, " --stack=", { "Ref" : "AWS::StackName" }, " --resource=SocketServerA --exit-code=$?\n"
				] ] } }
		    }
		},

		"SocketServerB" : {
		    "Type" : "AWS::EC2::Instance", "CreationPolicy" : { "ResourceSignal" : { "Count" : 1, "Timeout" : "PT60M"} },
		    "Properties" : {
		        "ImageId" :  {"Fn::FindInMap" : [ "AMIs" ,  { "Ref" : "AWS::Region" }, "Web"] },
		        "InstanceType" :  "r3.xlarge",
				"KeyName" : {"Fn::GetAtt" : [ "Environment", "Key"] },
				"IamInstanceProfile" : {"Fn::FindInMap" : [ "Constants" , "InstanceProfiles", "SocketServer"] },
				"DisableApiTermination" :  { "Ref" : "TerminationProtection" },
				"Monitoring" :  true,
				"SubnetId" : {"Fn::GetAtt" : [ "Environment", "WebSubnetB"] },
				"SecurityGroupIds" : [
					{ "Ref" : "ApplicationSG" },
					{"Fn::GetAtt" : [ "Environment", "RemoteAccessSG"] }
				],
				"EbsOptimized" : false,
				"Tags" : [ { "Key" : "Name", "Value" : {"Fn::Join" : [ "", [
						 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						 "socket2",
						 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
					] ]}
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
					"scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n\n",
					"filename=\"setup_socket.sh\"\n",
					"setup_file=\"$(mktemp)\"\n",
					"curl -sf -o \"${setup_file}\" \"${scripts}/${filename}\" || exit 1\n",
					"bash \"${setup_file}\"",
						" -b ", {"Fn::Join" : [ "-", [
							{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
							"files",
							{ "Ref" : "AWS::AccountId" }
						] ]},
						" -h ", {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						" -e ", {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }, "\n",
					"cfn-signal --region=", { "Ref" : "AWS::Region" }, " --stack=", { "Ref" : "AWS::StackName" }, " --resource=SocketServerB --exit-code=$?\n"
				] ] } }
		    }
		},

		"SocketELB" : {
		    "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
		    "Properties" : {
				"LoadBalancerName" : "Socket",
				"Subnets" : [
					{"Fn::GetAtt" : [ "Environment", "PublicSubnetA"] },
					{"Fn::GetAtt" : [ "Environment", "PublicSubnetB"] },
					{"Fn::GetAtt" : [ "Environment", "PublicSubnetC"] }
				],
				"ConnectionDrainingPolicy" : { "Enabled" :  true, "Timeout" : 300 },
				"CrossZone" :  true,
				"SecurityGroups" : [ { "Ref" : "SocketIncomingSG" } ],
				"HealthCheck" : {
					"Target" : "HTTP:80/",
					"Interval" : "60",
					"HealthyThreshold" : "3",
					"UnhealthyThreshold" : "3",
					"Timeout" : "30"
				},
		        "Listeners" : [
					{
						"Protocol" : "HTTP", "LoadBalancerPort" : "80",
						"InstanceProtocol" : "HTTP", "InstancePort" : "80"
					},
					{
						"Protocol" : "HTTPS", "LoadBalancerPort" : "443",
						"SSLCertificateId" :  { "Fn::Join" : [ "", [
							"arn:aws:iam::", { "Ref" : "AWS::AccountId" }, ":server-certificate/",
							{ "Ref" : "Certificate" }
						] ]},
						"InstanceProtocol" : "HTTP", "InstancePort" : "8443"
					}
		        ],
				"Instances" : [ { "Ref" : "SocketServerA" }, { "Ref" : "SocketServerB" } ]
		    }
		}
	},

	"Outputs" : {
		"JpServersPrimaryIPAddresses" : { "Value" :  {"Fn::Join" : [ ",", [
			{"Fn::GetAtt" : [ "JpServerAENI", "PrimaryPrivateIpAddress"]},
			{"Fn::GetAtt" : [ "JpServerBENI", "PrimaryPrivateIpAddress"]}
		] ]} },

		"WorkerServersPrimaryIPAddresses" : { "Value" :  {"Fn::Join" : [ ",", [
			{"Fn::GetAtt" : [ "WorkerServerAENI", "PrimaryPrivateIpAddress"]},
			{"Fn::GetAtt" : [ "WorkerServerBENI", "PrimaryPrivateIpAddress"]}
		] ]} },

		"WebELBName" : { "Value" : {"Fn::GetAtt" : [ "WebELB", "DNSName"]} },

		"SocketELBName" : { "Value" : {"Fn::GetAtt" : [ "SocketELB", "DNSName"]} }
	}
}

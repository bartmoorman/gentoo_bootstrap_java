{
	"AWSTemplateFormatVersion" : "2010-09-09",

	"Description" : "Version 1.0\nCreates the dialer services stack",

	"Parameters" : {
		"TargetEnvironment" : {
			"Type" : "String",
			"Description" : "The target environment for this stack", 
			"AllowedValues" : ["eu1iec1"]
		},
		"TerminationProtection" : {
			"Type" : "String", "AllowedValues" : ["true","false"], "Default" : "false"
		}
	},

	"Mappings" : {
		"Constants" : {
			"InstanceProfiles" : {		
				"SipServer" : "SipServer",
				"EhServer" : "EhServer",
				"MqServer" : "MqServer",
				"InboundServer" : "InboundServer"
			}
		}, 

		"AMIs" : {
			"eu-west-1" : { "Sip" : "ami-5af0af2d", "Eh" : "ami-5af0af2d", "Mq" : "ami-5af0af2d", "Inbound" : "ami-5af0af2d" }
		}
	},

	"Resources" : { 
		"Environment" : {
			"Type" : "AWS::CloudFormation::CustomResource",
			"Properties": {
				"ServiceToken": { "Fn::Join": [ "", [ "arn:aws:lambda:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":function:StackInfo" ] ] },
				"StackName": { "Ref": "TargetEnvironment" }
			}
		},

		"DialerSG" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : { 
				"VpcId" :   {"Fn::GetAtt" : [ "Environment", "VPC"] },
				"GroupDescription" : "Dialer",
				"SecurityGroupIngress" : [ 
					{ "IpProtocol" : "-1", "CidrIp" : {"Fn::GetAtt" : [ "Environment", "VPCCIDR"] } }				
				], 
				"SecurityGroupEgress" : [
					{ "IpProtocol" : "-1", "CidrIp" : "0.0.0.0/0" } 
				]
			}
		},

		"InboundIncomingSG" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : { 
				"VpcId" :  { "Fn::GetAtt" : [ "Environment", "VPC"] },
				"GroupDescription" : "Internet traffic permitted to the Inbound server",
				"SecurityGroupIngress" : [ 
					{ "IpProtocol" : "tcp", "FromPort" : "9000", "ToPort" : "9999", "CidrIp" : "0.0.0.0/0" }				
				], 
				"SecurityGroupEgress" : []
			}
		},

		"SipServer1" : {
		    "Type" : "AWS::EC2::Instance", "CreationPolicy" : { "ResourceSignal" : { "Count" : 1, "Timeout" : "PT60M"} },
		    "Properties" : { 
		        "ImageId" :  {"Fn::FindInMap" : [ "AMIs" ,  { "Ref" : "AWS::Region" }, "Sip"] },
		        "InstanceType" :  "c4.4xlarge",
				"KeyName" : {"Fn::GetAtt" : [ "Environment", "Key"] }, 
				"IamInstanceProfile" : {"Fn::FindInMap" : [ "Constants" , "InstanceProfiles", "SipServer"] },
				"DisableApiTermination" :  { "Ref" : "TerminationProtection" },  
				"Monitoring" :  true,
				"NetworkInterfaces" : [ 
					{ "DeviceIndex" : "0", "NetworkInterfaceId" : { "Ref" : "SipServer1ENI" } }
				], 
				"Tags" : [ { "Key" : "Name", "Value" : {"Fn::Join" : [ "", [
						 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						 "sip1",
						 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
					] ]} 
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
"useradd -g users -G wheel -m ec2-user\n",
"curl -s -o \"/home/ec2-user/.ssh/authorized_keys\" \"http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key\"\n",
					"scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n",

					"filename=\"/setup_sip.sh\"\n",
					"echo \"--- ${filename} (replace)\"\n",
					"curl -sf -o \"${filename}\" \"${scripts}${filename}\"\n",
					"bash -x \"${filename}\"",
						" -p ", { "Fn::Join" : [ "", [ 
									 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
									 "sip2",
									 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
								] ]}, 
						":",	{"Fn::GetAtt" : [ "SipServer2ENI", "PrimaryPrivateIpAddress"]},
						",", { "Fn::Join" : [ "", [ 
									 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
									 "sip3",
									 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
								] ]}, 
						":",	{"Fn::GetAtt" : [ "SipServer3ENI", "PrimaryPrivateIpAddress"]},
						" -b ", {"Fn::Join" : [ "-", [  
							{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] }, 
							"files", 
							{ "Ref" : "AWS::AccountId" } 
						] ]},
						" -h ", {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						" -e ", {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] },
					" > /tmp/user-data.log\n",
					"cfn-signal --region=", { "Ref" : "AWS::Region" }, " --stack=", { "Ref" : "AWS::StackName" }, " --resource=SipServer1 --exit-code=$?\n"
				] ] } }
		    }
		},

		"SipServer1ENI" : {
		    "Type" : "AWS::EC2::NetworkInterface",
		    "Properties" : {
				"SubnetId" : {"Fn::GetAtt" : [ "Environment", "AppSubnetA"] }, 
				"GroupSet" : [
					{ "Ref" : "DialerSG" }, 
					{"Fn::GetAtt" : [ "Environment", "RemoteAccessSG"] } 
				], 
				"Description" : {"Fn::Join" : [ "", [
					{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
					"sip1",
					{"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
				] ]}
		    }
		}, 

		"SipServer2" : {
		    "Type" : "AWS::EC2::Instance", "CreationPolicy" : { "ResourceSignal" : { "Count" : 1, "Timeout" : "PT60M"} },
		    "Properties" : { 
		        "ImageId" :  {"Fn::FindInMap" : [ "AMIs" ,  { "Ref" : "AWS::Region" }, "Sip"] },
		        "InstanceType" :  "c4.4xlarge",
				"KeyName" : {"Fn::GetAtt" : [ "Environment", "Key"] }, 
				"IamInstanceProfile" : {"Fn::FindInMap" : [ "Constants" , "InstanceProfiles", "SipServer"] },
				"DisableApiTermination" :  { "Ref" : "TerminationProtection" },  
				"Monitoring" :  true,
				"NetworkInterfaces" : [ 
					{ "DeviceIndex" : "0", "DeleteOnTermination" : false, "NetworkInterfaceId" : { "Ref" : "SipServer2ENI" } }
				], 
				"Tags" : [ { "Key" : "Name", "Value" : {"Fn::Join" : [ "", [
						 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						 "sip2",
						 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
					] ]} 
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
"useradd -g users -G wheel -m ec2-user\n",
"curl -s -o \"/home/ec2-user/.ssh/authorized_keys\" \"http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key\"\n",
					"scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n",

					"filename=\"/setup_sip.sh\"\n",
					"echo \"--- ${filename} (replace)\"\n",
					"curl -sf -o \"${filename}\" \"${scripts}${filename}\"\n",
					"bash -x \"${filename}\"",
						" -p ", { "Fn::Join" : [ "", [ 
									 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
									 "sip1",
									 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
								] ]}, 
						":",	{"Fn::GetAtt" : [ "SipServer1ENI", "PrimaryPrivateIpAddress"]},
						",", { "Fn::Join" : [ "", [ 
									 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
									 "sip3",
									 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
								] ]}, 
						":",	{"Fn::GetAtt" : [ "SipServer3ENI", "PrimaryPrivateIpAddress"]},
						" -b ", {"Fn::Join" : [ "-", [  
							{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] }, 
							"files", 
							{ "Ref" : "AWS::AccountId" } 
						] ]},
						" -h ", {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						" -e ", {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] },
					" > /tmp/user-data.log\n",
					"cfn-signal --region=", { "Ref" : "AWS::Region" }, " --stack=", { "Ref" : "AWS::StackName" }, " --resource=SipServer2 --exit-code=$?\n"
				] ] } }
		    }
		},

		"SipServer2ENI" : {
		    "Type" : "AWS::EC2::NetworkInterface",
		    "Properties" : {
				"SubnetId" : {"Fn::GetAtt" : [ "Environment", "AppSubnetB"] }, 
				"GroupSet" : [
					{ "Ref" : "DialerSG" }, 
					{"Fn::GetAtt" : [ "Environment", "RemoteAccessSG"] } 
				], 
				"Description" : {"Fn::Join" : [ "", [
					{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
					"sip2",
					{"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
				] ]}
		    }
		}, 

		"SipServer3" : {
		    "Type" : "AWS::EC2::Instance", "CreationPolicy" : { "ResourceSignal" : { "Count" : 1, "Timeout" : "PT60M"} },
		    "Properties" : { 
		        "ImageId" :  {"Fn::FindInMap" : [ "AMIs" ,  { "Ref" : "AWS::Region" }, "Sip"] },
		        "InstanceType" :  "c4.4xlarge",
				"KeyName" : {"Fn::GetAtt" : [ "Environment", "Key"] }, 
				"IamInstanceProfile" : {"Fn::FindInMap" : [ "Constants" , "InstanceProfiles", "SipServer"] },
				"DisableApiTermination" :  { "Ref" : "TerminationProtection" },  
				"Monitoring" :  true,
				"NetworkInterfaces" : [ 
					{ "DeviceIndex" : "0", "DeleteOnTermination" : false, "NetworkInterfaceId" : { "Ref" : "SipServer3ENI" } }
				], 
				"Tags" : [ { "Key" : "Name", "Value" : {"Fn::Join" : [ "", [
						 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						 "sip3",
						 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
					] ]} 
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
"useradd -g users -G wheel -m ec2-user\n",
"curl -s -o \"/home/ec2-user/.ssh/authorized_keys\" \"http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key\"\n",
					"scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n",

					"filename=\"/setup_sip.sh\"\n",
					"echo \"--- ${filename} (replace)\"\n",
					"curl -sf -o \"${filename}\" \"${scripts}${filename}\"\n",
					"bash -x \"${filename}\"",
						" -p ", { "Fn::Join" : [ "", [ 
									 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
									 "sip1",
									 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
								] ]}, 
						":",	{"Fn::GetAtt" : [ "SipServer1ENI", "PrimaryPrivateIpAddress"]},
						",", { "Fn::Join" : [ "", [ 
									 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
									 "sip2",
									 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
								] ]}, 
						":",	{"Fn::GetAtt" : [ "SipServer2ENI", "PrimaryPrivateIpAddress"]},
						" -b ", {"Fn::Join" : [ "-", [  
							{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] }, 
							"files", 
							{ "Ref" : "AWS::AccountId" } 
						] ]},
						" -h ", {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						" -e ", {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] },
					" > /tmp/user-data.log\n",
					"cfn-signal --region=", { "Ref" : "AWS::Region" }, " --stack=", { "Ref" : "AWS::StackName" }, " --resource=SipServer3 --exit-code=$?\n"
				] ] } }
		    }
		},

		"SipServer3ENI" : {
		    "Type" : "AWS::EC2::NetworkInterface",
		    "Properties" : {
				"SubnetId" : {"Fn::GetAtt" : [ "Environment", "AppSubnetC"] }, 
				"GroupSet" : [
					{ "Ref" : "DialerSG" }, 
					{"Fn::GetAtt" : [ "Environment", "RemoteAccessSG"] } 
				], 
				"Description" : {"Fn::Join" : [ "", [
					{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
					"sip3",
					{"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
				] ]}
		    }
		}, 

		"EhServer1" : {
		    "Type" : "AWS::EC2::Instance", "CreationPolicy" : { "ResourceSignal" : { "Count" : 1, "Timeout" : "PT60M"} },
		    "Properties" : { 
		        "ImageId" :  {"Fn::FindInMap" : [ "AMIs" ,  { "Ref" : "AWS::Region" }, "Eh"] },
		        "InstanceType" :  "m3.xlarge",
				"KeyName" : {"Fn::GetAtt" : [ "Environment", "Key"] }, 
				"IamInstanceProfile" : {"Fn::FindInMap" : [ "Constants" , "InstanceProfiles", "EhServer"] },
				"DisableApiTermination" :  { "Ref" : "TerminationProtection" },  
				"Monitoring" :  true,
				"NetworkInterfaces" : [ 
					{ "DeviceIndex" : "0", "DeleteOnTermination" : false, "NetworkInterfaceId" : { "Ref" : "EhServer1ENI" } }
				],  
				"EbsOptimized" :  false,
				"Tags" : [ { "Key" : "Name", "Value" : {"Fn::Join" : [ "", [
						 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						 "eh1",
						 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
					] ]} 
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
"useradd -g users -G wheel -m ec2-user\n",
"curl -s -o \"/home/ec2-user/.ssh/authorized_keys\" \"http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key\"\n",
					"scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n",

					"filename=\"/setup_eh.sh\"\n",
					"echo \"--- ${filename} (replace)\"\n",
					"curl -sf -o \"${filename}\" \"${scripts}${filename}\"\n",
					"bash -x \"${filename}\"",
						" -b ", {"Fn::Join" : [ "-", [  
							{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] }, 
							"files", 
							{ "Ref" : "AWS::AccountId" } 
						] ]},
						" -h ", {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						" -e ", {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] },
					" > /tmp/user-data.log\n",
					"cfn-signal --region=", { "Ref" : "AWS::Region" }, " --stack=", { "Ref" : "AWS::StackName" }, " --resource=EhServer1 --exit-code=$?\n"
				] ] } }

		    }
		},

		"EhServer1ENI" : {
		    "Type" : "AWS::EC2::NetworkInterface",
		    "Properties" : {
				"SubnetId" : {"Fn::GetAtt" : [ "Environment", "AppSubnetA"] }, 
				"GroupSet" : [
					{ "Ref" : "DialerSG" }, 
					{"Fn::GetAtt" : [ "Environment", "RemoteAccessSG"] } 
				], 
				"Description" : {"Fn::Join" : [ "", [
					{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
					"eh1",
					{"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
				] ]}
		    }
		}, 

		"EhServer2" : {
		    "Type" : "AWS::EC2::Instance", "CreationPolicy" : { "ResourceSignal" : { "Count" : 1, "Timeout" : "PT60M"} },
		    "Properties" : { 
		        "ImageId" :  {"Fn::FindInMap" : [ "AMIs" ,  { "Ref" : "AWS::Region" }, "Eh"] },
		        "InstanceType" :  "m3.xlarge",
				"KeyName" : {"Fn::GetAtt" : [ "Environment", "Key"] }, 
				"IamInstanceProfile" : {"Fn::FindInMap" : [ "Constants" , "InstanceProfiles", "EhServer"] },
				"DisableApiTermination" :  { "Ref" : "TerminationProtection" },  
				"Monitoring" :  true,
				"NetworkInterfaces" : [ 
					{ "DeviceIndex" : "0", "DeleteOnTermination" : false, "NetworkInterfaceId" : { "Ref" : "EhServer2ENI" } }
				],  
				"EbsOptimized" :  false,
				"Tags" : [ { "Key" : "Name", "Value" : {"Fn::Join" : [ "", [
						 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						 "eh2",
						 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
					] ]} 
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
"useradd -g users -G wheel -m ec2-user\n",
"curl -s -o \"/home/ec2-user/.ssh/authorized_keys\" \"http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key\"\n",
					"scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n",

					"filename=\"/setup_eh.sh\"\n",
					"echo \"--- ${filename} (replace)\"\n",
					"curl -sf -o \"${filename}\" \"${scripts}${filename}\"\n",
					"bash -x \"${filename}\"",
						" -b ", {"Fn::Join" : [ "-", [  
							{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] }, 
							"files", 
							{ "Ref" : "AWS::AccountId" } 
						] ]},
						" -h ", {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						" -e ", {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] },
					" > /tmp/user-data.log\n",
					"cfn-signal --region=", { "Ref" : "AWS::Region" }, " --stack=", { "Ref" : "AWS::StackName" }, " --resource=EhServer2 --exit-code=$?\n"
				] ] } }

		    }
		},

		"EhServer2ENI" : {
		    "Type" : "AWS::EC2::NetworkInterface",
		    "Properties" : {
				"SubnetId" : {"Fn::GetAtt" : [ "Environment", "AppSubnetB"] }, 
				"GroupSet" : [
					{ "Ref" : "DialerSG" }, 
					{"Fn::GetAtt" : [ "Environment", "RemoteAccessSG"] } 
				], 
				"Description" : {"Fn::Join" : [ "", [
					{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
					"eh2",
					{"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
				] ]}
		    }
		}, 

		"MqServer1" : {
		    "Type" : "AWS::EC2::Instance", "CreationPolicy" : { "ResourceSignal" : { "Count" : 1, "Timeout" : "PT60M"} },
		    "Properties" : { 
		        "ImageId" :  {"Fn::FindInMap" : [ "AMIs" ,  { "Ref" : "AWS::Region" }, "Mq"] },
		        "InstanceType" :  "m3.xlarge",
				"KeyName" : {"Fn::GetAtt" : [ "Environment", "Key"] }, 
				"IamInstanceProfile" : {"Fn::FindInMap" : [ "Constants" , "InstanceProfiles", "MqServer"] },
				"DisableApiTermination" :  { "Ref" : "TerminationProtection" },  
				"Monitoring" :  true,
				"NetworkInterfaces" : [ 
					{ "DeviceIndex" : "0", "DeleteOnTermination" : false, "NetworkInterfaceId" : { "Ref" : "MqServer1ENI" } }
				],  
				"EbsOptimized" :  false,
				"Tags" : [ { "Key" : "Name", "Value" : {"Fn::Join" : [ "", [
						 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						 "mq1",
						 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
					] ]} 
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
"useradd -g users -G wheel -m ec2-user\n",
"curl -s -o \"/home/ec2-user/.ssh/authorized_keys\" \"http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key\"\n",
					"scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n",

					"filename=\"/setup_mq.sh\"\n",
					"echo \"--- ${filename} (replace)\"\n",
					"curl -sf -o \"${filename}\" \"${scripts}${filename}\"\n",
					"bash -x \"${filename}\"",
						" -p ", { "Fn::Join" : [ "", [ 
									 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
									 "mq2",
									 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
								] ]}, 
						":",	{"Fn::GetAtt" : [ "MqServer2ENI", "PrimaryPrivateIpAddress"]},
						" -b ", {"Fn::Join" : [ "-", [  
							{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] }, 
							"files", 
							{ "Ref" : "AWS::AccountId" } 
						] ]},
						" -h ", {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						" -e ", {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] },
					" > /tmp/user-data.log\n",
					"cfn-signal --region=", { "Ref" : "AWS::Region" }, " --stack=", { "Ref" : "AWS::StackName" }, " --resource=MqServer1 --exit-code=$?\n"
				] ] } }
		    }
		},

		"MqServer1ENI" : {
		    "Type" : "AWS::EC2::NetworkInterface",
		    "Properties" : {
				"SubnetId" : {"Fn::GetAtt" : [ "Environment", "AppSubnetA"] }, 
				"GroupSet" : [
					{ "Ref" : "DialerSG" }, 
					{"Fn::GetAtt" : [ "Environment", "RemoteAccessSG"] } 
				], 
				"Description" : {"Fn::Join" : [ "", [
					{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
					"mq1",
					{"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
				] ]}
		    }
		}, 

		"MqServer2" : {
		    "Type" : "AWS::EC2::Instance", "CreationPolicy" : { "ResourceSignal" : { "Count" : 1, "Timeout" : "PT60M"} },
		    "Properties" : { 
		        "ImageId" :  {"Fn::FindInMap" : [ "AMIs" ,  { "Ref" : "AWS::Region" }, "Mq"] },
		        "InstanceType" :  "m3.xlarge",
				"KeyName" : {"Fn::GetAtt" : [ "Environment", "Key"] }, 
				"IamInstanceProfile" : {"Fn::FindInMap" : [ "Constants" , "InstanceProfiles", "MqServer"] },
				"DisableApiTermination" :  { "Ref" : "TerminationProtection" },  
				"Monitoring" :  true,
				"NetworkInterfaces" : [ 
					{ "DeviceIndex" : "0", "DeleteOnTermination" : false, "NetworkInterfaceId" : { "Ref" : "MqServer2ENI" } }
				],  
				"EbsOptimized" :  false,
				"Tags" : [ { "Key" : "Name", "Value" : {"Fn::Join" : [ "", [
						 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						 "mq2",
						 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
					] ]} 
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
"useradd -g users -G wheel -m ec2-user\n",
"curl -s -o \"/home/ec2-user/.ssh/authorized_keys\" \"http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key\"\n",
					"scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n",

					"filename=\"/setup_mq.sh\"\n",
					"echo \"--- ${filename} (replace)\"\n",
					"curl -sf -o \"${filename}\" \"${scripts}${filename}\"\n",
					"bash -x \"${filename}\"",
						" -p ", { "Fn::Join" : [ "", [ 
									 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
									 "mq1",
									 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
								] ]}, 
						":",	{"Fn::GetAtt" : [ "MqServer1ENI", "PrimaryPrivateIpAddress"]},
						" -b ", {"Fn::Join" : [ "-", [  
							{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] }, 
							"files", 
							{ "Ref" : "AWS::AccountId" } 
						] ]},
						" -h ", {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						" -e ", {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] },
					" > /tmp/user-data.log\n",
					"cfn-signal --region=", { "Ref" : "AWS::Region" }, " --stack=", { "Ref" : "AWS::StackName" }, " --resource=MqServer2 --exit-code=$?\n"
				] ] } }
		    }
		},

		"MqServer2ENI" : {
		    "Type" : "AWS::EC2::NetworkInterface",
		    "Properties" : {
				"SubnetId" : {"Fn::GetAtt" : [ "Environment", "AppSubnetB"] }, 
				"GroupSet" : [
					{ "Ref" : "DialerSG" }, 
					{"Fn::GetAtt" : [ "Environment", "RemoteAccessSG"] } 
				], 
				"Description" : {"Fn::Join" : [ "", [
					{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
					"mq2",
					{"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
				] ]}
		    }
		}, 

		"InboundServer1" : {
		    "Type" : "AWS::EC2::Instance", "CreationPolicy" : { "ResourceSignal" : { "Count" : 1, "Timeout" : "PT60M"} },
		    "Properties" : { 
		        "ImageId" :  {"Fn::FindInMap" : [ "AMIs" ,  { "Ref" : "AWS::Region" }, "Inbound"] },
		        "InstanceType" :  "m3.xlarge",
				"KeyName" : {"Fn::GetAtt" : [ "Environment", "Key"] }, 
				"IamInstanceProfile" : {"Fn::FindInMap" : [ "Constants" , "InstanceProfiles", "InboundServer"] },
				"DisableApiTermination" :  { "Ref" : "TerminationProtection" },  
				"Monitoring" :  true,
				"NetworkInterfaces" : [ 
					{ "DeviceIndex" : "0", "DeleteOnTermination" : false, "NetworkInterfaceId" : { "Ref" : "InboundServer1ENI" } }
				],  
				"EbsOptimized" :  false,
				"Tags" : [ { "Key" : "Name", "Value" : {"Fn::Join" : [ "", [
						 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						 "inbound1",
						 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
					] ]} 
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
"useradd -g users -G wheel -m ec2-user\n",
"curl -s -o \"/home/ec2-user/.ssh/authorized_keys\" \"http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key\"\n",
					"scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n",

					"filename=\"/setup_inbound.sh\"\n",
					"echo \"--- ${filename} (replace)\"\n",
					"curl -sf -o \"${filename}\" \"${scripts}${filename}\"\n",
					"bash -x \"${filename}\"",
						" -m ", { "Fn::Join" : [ "", [ 
									 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
									 "inbound2",
									 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
								] ]}, 
						":",	{"Fn::GetAtt" : [ "InboundServer2ENI", "PrimaryPrivateIpAddress"]},
						" -i 1 -o 1",
						" -b ", {"Fn::Join" : [ "-", [  
							{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] }, 
							"files", 
							{ "Ref" : "AWS::AccountId" } 
						] ]},
						" -h ", {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						" -e ", {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] },
					" > /tmp/user-data.log\n",
					"cfn-signal --region=", { "Ref" : "AWS::Region" }, " --stack=", { "Ref" : "AWS::StackName" }, " --resource=InboundServer1 --exit-code=$?\n"
				] ] } }
		    }
		},

		"InboundServer1ENI" : {
		    "Type" : "AWS::EC2::NetworkInterface",
		    "Properties" : {
				"SubnetId" : {"Fn::GetAtt" : [ "Environment", "WebSubnetA"] }, 
				"GroupSet" : [
					{ "Ref" : "DialerSG" }, 
					{"Fn::GetAtt" : [ "Environment", "RemoteAccessSG"] } 
				], 
				"Description" : {"Fn::Join" : [ "", [
					{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
					"inbound1",
					{"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
				] ]}
		    }
		}, 

		"InboundServer2" : {
		    "Type" : "AWS::EC2::Instance", "CreationPolicy" : { "ResourceSignal" : { "Count" : 1, "Timeout" : "PT60M"} },
		    "Properties" : { 
		        "ImageId" :  {"Fn::FindInMap" : [ "AMIs" ,  { "Ref" : "AWS::Region" }, "Inbound"] },
		        "InstanceType" :  "m3.xlarge",
				"KeyName" : {"Fn::GetAtt" : [ "Environment", "Key"] }, 
				"IamInstanceProfile" : {"Fn::FindInMap" : [ "Constants" , "InstanceProfiles", "InboundServer"] },
				"DisableApiTermination" :  { "Ref" : "TerminationProtection" },  
				"Monitoring" :  true,
				"NetworkInterfaces" : [ 
					{ "DeviceIndex" : "0", "DeleteOnTermination" : false, "NetworkInterfaceId" : { "Ref" : "InboundServer2ENI" } }
				],  
				"EbsOptimized" :  false,
				"Tags" : [ { "Key" : "Name", "Value" : {"Fn::Join" : [ "", [
						 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						 "inbound2",
						 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
					] ]} 
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
"useradd -g users -G wheel -m ec2-user\n",
"curl -s -o \"/home/ec2-user/.ssh/authorized_keys\" \"http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key\"\n",
					"scripts=\"https://raw.githubusercontent.com/iVirus/gentoo_bootstrap_java/master/templates/hvm/scripts\"\n",

					"filename=\"/setup_inbound.sh\"\n",
					"echo \"--- ${filename} (replace)\"\n",
					"curl -sf -o \"${filename}\" \"${scripts}${filename}\"\n",
					"bash -x \"${filename}\"",
						" -m ", { "Fn::Join" : [ "", [ 
									 {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
									 "inbound1",
									 {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
								] ]}, 
						":",	{"Fn::GetAtt" : [ "InboundServer1ENI", "PrimaryPrivateIpAddress"]},
						" -i 2 -o 2",
						" -b ", {"Fn::Join" : [ "-", [  
							{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] }, 
							"files", 
							{ "Ref" : "AWS::AccountId" } 
						] ]},
						" -h ", {"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
						" -e ", {"Fn::GetAtt" : [ "Environment", "NamingSuffix"] },
					" > /tmp/user-data.log\n",
					"cfn-signal --region=", { "Ref" : "AWS::Region" }, " --stack=", { "Ref" : "AWS::StackName" }, " --resource=InboundServer2 --exit-code=$?\n"
				] ] } }
		    }
		},

		"InboundServer2ENI" : {
		    "Type" : "AWS::EC2::NetworkInterface",
		    "Properties" : {
				"SubnetId" : {"Fn::GetAtt" : [ "Environment", "WebSubnetB"] }, 
				"GroupSet" : [
					{ "Ref" : "DialerSG" }, 
					{"Fn::GetAtt" : [ "Environment", "RemoteAccessSG"] } 
				], 
				"Description" : {"Fn::Join" : [ "", [
					{"Fn::GetAtt" : [ "Environment", "NamingPrefix"] },
					"inbound2",
					{"Fn::GetAtt" : [ "Environment", "NamingSuffix"] }
				] ]}
		    }
		}, 

		"InboundELB" : {
		    "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
		    "Properties" : { 
				"LoadBalancerName" : "Inbound",
				"Subnets" : [
					{"Fn::GetAtt" : [ "Environment", "PublicSubnetA"] },
					{"Fn::GetAtt" : [ "Environment", "PublicSubnetB"] },
					{"Fn::GetAtt" : [ "Environment", "PublicSubnetC"] }
				], 
				"ConnectionDrainingPolicy" : { "Enabled" :  true, "Timeout" : 300 }, 
				"CrossZone" :  true, 
				"SecurityGroups" : [ { "Ref" : "InboundIncomingSG" } ], 
				"HealthCheck" : { 
					"Target" : "TCP:9900", 
					"Interval" : "60", 
					"HealthyThreshold" : "3", 
					"UnhealthyThreshold" : "3", 
					"Timeout" : "30"
				},  
		        "Listeners" : [
					{ "Protocol" : "TCP", "LoadBalancerPort" : "9900", "InstanceProtocol" : "TCP", "InstancePort" : "9900" },
					{ "Protocol" : "TCP", "LoadBalancerPort" : "9901", "InstanceProtocol" : "TCP", "InstancePort" : "9901" },
					{ "Protocol" : "TCP", "LoadBalancerPort" : "9902", "InstanceProtocol" : "TCP", "InstancePort" : "9902" },
					{ "Protocol" : "TCP", "LoadBalancerPort" : "9908", "InstanceProtocol" : "TCP", "InstancePort" : "9909" },
					{ "Protocol" : "TCP", "LoadBalancerPort" : "9909", "InstanceProtocol" : "TCP", "InstancePort" : "9909" },
					{ "Protocol" : "TCP", "LoadBalancerPort" : "9920", "InstanceProtocol" : "TCP", "InstancePort" : "9920" },
					{ "Protocol" : "TCP", "LoadBalancerPort" : "9921", "InstanceProtocol" : "TCP", "InstancePort" : "9921" },
					{ "Protocol" : "TCP", "LoadBalancerPort" : "9999", "InstanceProtocol" : "TCP", "InstancePort" : "9999" }
		        ], 
				"Instances" : [ { "Ref" : "InboundServer1" }, { "Ref" : "InboundServer2" } ]
		    }
		}
	},

	"Outputs" : {
		"SipServersPrimaryIPAddresses" : { "Value" :  {"Fn::Join" : [ ",", [ 
			{"Fn::GetAtt" : [ "SipServer1ENI", "PrimaryPrivateIpAddress"]},
			{"Fn::GetAtt" : [ "SipServer2ENI", "PrimaryPrivateIpAddress"]},
			{"Fn::GetAtt" : [ "SipServer3ENI", "PrimaryPrivateIpAddress"]}
		] ]} },

		"EhServersPrimaryIPAddresses" : { "Value" :  {"Fn::Join" : [ ",", [ 
			{"Fn::GetAtt" : [ "EhServer1ENI", "PrimaryPrivateIpAddress"]},
			{"Fn::GetAtt" : [ "EhServer2ENI", "PrimaryPrivateIpAddress"]}
		] ]} },

		"MqServersPrimaryIPAddresses" : { "Value" :  {"Fn::Join" : [ ",", [ 
			{"Fn::GetAtt" : [ "MqServer1ENI", "PrimaryPrivateIpAddress"]},
			{"Fn::GetAtt" : [ "MqServer2ENI", "PrimaryPrivateIpAddress"]}
		] ]} },

		"InboundELBName" : { "Value" : {"Fn::GetAtt" : [ "InboundELB", "DNSName"]} }
	}
}
